@page
@{
    ViewData["Title"] = "Users";
}
@model GameOfRevenge.WebAdmin.Pages.UsersModel
@using GameOfRevenge.WebAdmin

@section Headers {
    <partial name="_Modals" model="null" view-data="@Helper.ViewRegion(ViewData, "StyleSection")" />
    <partial name="_UsersTableView" model="null" view-data="@Helper.ViewRegion(ViewData, "StyleSection")" />
    <partial name="_UserView" model="null" view-data="@Helper.ViewRegion(ViewData, "StyleSection")" />
}

<div class="container-fluid">
    <form id="logout-form" method="post" asp-page-handler="Logout" style="display: none;"></form>

    <!-- User Modal -->
    <div class="modal fade" id="user-modal" tabindex="-1" role="dialog" style="display: none;">
        <div class="modal-dialog modal-lg" role="document" style="max-width:95%">
            <div class="modal-content">
                <div class="modal-header">
                    <label id="user-modal-title" style="display: none;">user info</label>
                    <button class="close" type="button" data-dismiss="modal"><span>×</span></button>
                </div>
                <div id="user-info" class="modal-body">
                </div>
            </div>
        </div>
    </div>

    <div class="animated fadeIn">
        <div class="row">
            <div class="col-md-12">
                <div id="users" class="card">
                    @await Html.PartialAsync("_UsersTableView", Model.UserTable, Helper.ViewRegion(ViewData, "HTMLSection"))
                </div>
            </div>
        </div>
    </div>

    <partial name="_Modals" model="null" view-data="@Helper.ViewRegion(ViewData, "HTMLSection")"/>
</div>

@section Scripts {
    <partial name="_Modals" model="null" view-data="@Helper.ViewRegion(ViewData, "ScriptSection")"/>
    <partial name="_UsersTableView" model="null" view-data="@Helper.ViewRegion(ViewData, "ScriptSection")" />
    <partial name="_UserView" model="null" view-data="@Helper.ViewRegion(ViewData, "ScriptSection")" />

    <script>
        function ChangePage(idx) {
            $.ajax({
                url: window.location.href,
                type: 'GET',
                data: {
                    handler: 'UserPageView',
                    pageIndex: idx
                },
                success: function (result) {
                    $('#users').html(result);
                }
            });
        }

        function SearchUser(element) {
            let searchInput = document.getElementById('search-user');
            console.log(searchInput.value);
            //            ShowToast();


            $.ajax({
                url: window.location.href,
                type: 'GET',
                data: {
                    handler: 'UserPageView',
                    userId: searchInput.value
                },
                success: function (result) {
                    $('#users').html(result);
                }
            });
        }

        let userModal = $('#user-info');
        $(document).on('show.bs.modal', '#user-modal', function (event) {
            $('body').addClass('modal-open');

            let playerId = $(event.relatedTarget).data('player-id');
            userModal.empty();
            $.ajax({
                url: window.location.href,
                type: 'GET',
                data: {
                    handler: 'UserView',
                    playerId: playerId
                },
                success: function (result) {
                    userModal.html(result);
                }
            });
        });

        $(document).on('hidden.bs.modal', '#user-modal', function (event) {
            let structures = document.getElementById('user-modal').querySelector('#tab-structures');
            let castlelvl = structures.querySelector('#castle-level').value;

            let userRow = document.getElementById('users-table').querySelector('#user-' + playerId);
            userRow.querySelector('#user-castlelevel').textContent = castlelvl;
        });

        showModal['gift'] = {
            width: 750,
            requestData: function (buttonElement) {
                return {
                    handler: 'AddRewardsView',
                    applyToAll: true
                }
            },
            requestSubmit: function (event) {
                if (newValue === '') {
                    event.preventDefault();
                    $('#edit-modal').modal('hide');
                    return false;
                }

                let modalForm = document.getElementById('add-reward-modal-form');
                let selectElement = modalForm.querySelector('#dropdown-option');
                let values = {};
                values[selectElement.options[selectElement.selectedIndex].value] = newValue;

                let rewardValueInput = modalForm.querySelector('input[name="RewardValues"]');
                rewardValueInput.value = JSON.stringify(values);

                return true;
            }
        }

        $(document).ready(function () {
            const breadcrumbList = document.getElementById('breadcrumb-list');
            const breadcrumbLinks = breadcrumbList.querySelectorAll('td[data-page]');
            const currentUrl = window.location.pathname;
            const currentPage = '/' + currentUrl.split('/').pop();

            breadcrumbLinks.forEach(item => {
                if (item.dataset.page === currentPage) {
                    item.classList.add('active');
                    item.style.cursor = 'auto';
                } else {
                    item.classList.remove('active');
                    item.style.cursor = 'pointer';
                }
            });
        });
    </script>
}