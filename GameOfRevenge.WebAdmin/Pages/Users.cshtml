@page
@{
    ViewData["Title"] = "Home page";
}
@model GameOfRevenge.WebAdmin.Models.UserModel

<style>
    .modal-opened2::after {
        content: '';
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        z-index: 1040;
    }

    .modal-opened3::after {
        content: '';
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        z-index: 1030;
    }

    .modal.show .modal-dialog2 {
        -webkit-transform: translate(0, 25%);
        transform: translate(0, 25%);
        z-index: 1050;
    }

    .modal.show .modal-dialog3 {
        -webkit-transform: translate(0, 70%);
        transform: translate(0, 70%);
    }
</style>

<div class="container-fluid">
    <!-- User Modal -->
    <div class="modal fade" id="user-modal" tabindex="-1" role="dialog" style="display: none;">
        <div class="modal-dialog modal-lg" role="document" style="max-width:95%">
            <div class="modal-content">
                <div class="modal-header">
                    <label id="user-modal-title" style="display: none;">user info</label>
                    <button class="close" type="button" data-dismiss="modal"><span>×</span></button>
                </div>
                <div id="user-info" class="modal-body">
                </div>
            </div>
        </div>
    </div>
    <!-- Edit Modal -->
    <div class="modal fade modal-stack modal-opened2" id="edit-modal" tabindex="-1" role="dialog" style="display: none;">
        <div class="modal-dialog modal-dialog2 modal-warning" role="document">
            <div class="modal-content">
            </div>
        </div>
    </div>
    <!-- Save Modal -->
    <div class="modal fade modal-stack modal-opened3" id="save-modal" tabindex="-1" role="dialog"
         data-backdrop="static" style="display: none;">
        <div class="modal-dialog modal-dialog3 modal-sm" role="document" style="z-index:1050">
            <div class="modal-content">
                <div class="modal-header">
                </div>
                <div class="modal-body">
                    <p id="save-modal-text"></p>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-secondary" type="button" id="save-modal-close" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    <div class="animated fadeIn">
        <div class="row">
            <div class="col-md-12">
                <form method="post" id="logout-form" style="display: none;">
                    <button type="submit">Logout</button>
                </form>

                <div id="users" class="card">
                    @await Html.PartialAsync("_UsersTableView", Model.UserTable)
                </div>
            </div>
        </div>
    </div>
    <!-- Spinner -->
    <div id="spinner" style="display: none;">
        <div class="modal-header">
            <div class="spinner-border" role="status">
                <span class="sr-only text-dark">Loading...</span>
            </div>
            <label class="text-dark d-none">Error loading data</label>
            <button class="close" type="button" data-dismiss="modal">x</button>
        </div>
        <div class="modal-footer">
            <button class="btn btn-secondary" type="button" data-dismiss="modal">Close</button>
            <button class="btn btn-warning" type="button" disabled>Save changes</button>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/lib/jquery-ajax-unobtrusive/jquery.unobtrusive-ajax.min.js"></script>
    <script>
        var allowedKeys = ['ArrowLeft', 'ArrowRight', 'Backspace', 'Delete', 'Tab'];
        var newValue = '';
        var multipleValues = {};
        var currSelection = 0;
        var playerId = 0;
        var showModal = {};
        var hideModal = {};

        function SaveSuccess() {
            $(this).closest('.modal').modal('hide');
        }
        function SaveFailure() {
            document.getElementById('save-modal-text').innerText = "Error saving data";
            document.getElementById('save-modal-close').disabled = false;
        }

        function KeyDown(event) {
            if (!/^\d$/.test(event.key) && !allowedKeys.includes(event.key)) {
                event.preventDefault();
                return false;
            }

            return true;
        }
        function KeyInput(event, modal, func) {
            var editInput = event.target;
            var value = editInput.value;
            var selectionStart = editInput.selectionStart;
            var selectionEnd = editInput.selectionEnd;

            var unformattedValue = value.replace(/,/g, '');
            var formattedValue = unformattedValue.replace(/(\d)(?=(\d{3})+(?!\d))/g, '$1,');
            newValue = unformattedValue;
            multipleValues[currSelection] = newValue;
            if (typeof func === 'function') func(modal, parseInt(unformattedValue));

            var diffLength = formattedValue.length - value.length;
            var newSelectionStart = Math.max(selectionStart + diffLength, 0);
            var newSelectionEnd = Math.max(selectionEnd + diffLength, 0);

            editInput.value = formattedValue;
            editInput.setSelectionRange(newSelectionStart, newSelectionEnd);
        }
        function AddEditInputListeners(id, func) {
            var modal = document.getElementById(id);
            var editInput = modal.querySelector('#input-newvalue');
            if (typeof editInput === 'undefined') return;

            editInput.removeEventListener('keydown', KeyDown);
            editInput.addEventListener('keydown', KeyDown);

            var f = KeyInput;
            if (typeof func === 'function') f = function (event) { KeyInput(event, modal, func); }
            editInput.removeEventListener('input', f);
            editInput.addEventListener('input', f);
        }

        function ChangePage(idx) {
            $.ajax({
                url: window.location.href,
                type: 'GET',
                data: { handler: 'UserPageView', pageIndex: idx },
                success: function (result) {
                    $('#users').html(result);
                }
            });
        }

        var userModal = $('#user-info');
        $(document).on('show.bs.modal', '#user-modal', function (event) {
            $('body').addClass('modal-open');

            var playerId = $(event.relatedTarget).data('player-id');
            userModal.empty();
            $.ajax({
                url: window.location.href,
                type: 'GET',
                data: { handler: 'UserView', playerId: playerId },
                success: function (result) {
                    userModal.html(result);
                }
            });
        });

        $(document).ready(function () {
            const breadcrumbList = document.getElementById('breadcrumb-list');
            const breadcrumbLinks = breadcrumbList.querySelectorAll('td[data-page]');
            const currentUrl = window.location.pathname;
            const currentPage = '/' + currentUrl.split('/').pop();

            breadcrumbLinks.forEach(item => {
                if (item.dataset.page === currentPage) {
                    item.classList.add('active');
                    item.style.cursor = 'auto';
                } else {
                    item.classList.remove('active');
                    item.style.cursor = 'pointer';
                }
            });
        });
    </script>
}